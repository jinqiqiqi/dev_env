;; (require 'sawfish.wm.ext.pager)
;; (add-hook 'after-initialization-hook pager t)
(setq load-path (cons "/usr/share/sawfish/lisp/sawfish/wm/commands/"
					  load-path))
(require 'jump-or-exec)
(require 'rep.io.timers)

(defun eric-display-msg (message &optional seconds)
  "display message for seconds seconds and make the message disappeared."
  (interactive)
  (display-message message)
  (make-timer
   (lambda ()
	 (display-message))
   (or seconds 3)))


(defun amixer-get ()
  (let* ((stream (make-string-output-stream))
		 (process (make-process stream))
		 (retval (call-process process nil
							   "/usr/bin/amixer" "get" "Master")))
	(when (and (eql retval 0)
			   (string-match "Mono:.*?\\[([^%]*)%\\].*\\[(.*)\\]"
							 (get-output-stream-string stream)))
	  (expand-list-match "\\1 [\\2]"))))


(bind-keys global-keymap
		   "Super-O" '(jump-or-exec "Opera"
									(lambda ()
									  (eric-display-msg "starting Opera...")
									  (system "opera &")
									  "sleep 10")
									(lambda (wind)
									  (display-window wind))))

(bind-keys global-keymap
		   "Super-T" '(jump-or-exec ":~"
									(lambda ()
									  (eric-display-msg "starting Terminal...")
									  (system "gnome-terminal &")
									  "sleep 10")
									(lambda (wind)
									  (display-window wind))))
(bind-keys global-keymap
		   "Super-E" '(jump-or-exec "Emacs"
									(lambda ()
									  (eric-display-msg "starting Emacs...")
									  (system "emacs &")
									  "sleep 10")
									(lambda (wind)
									  (display-window wind))))





(bind-keys global-keymap
		   "Super-L" '((system "xscreensaver-command -activate")
					   (eric-display-msg "Locking workstation...")))
(bind-keys global-keymap
		   "XF86AudioLowerVolume"
		   '((eric-display-msg "Volume: -5%")
			 (system "amixer sset Master 5%-")))
(bind-keys global-keymap
		   "XF86AudioRaiseVolume"
		   '((eric-display-msg  "Volume: +5%")
			 (system "amixer sset Master 5%+")))
(bind-keys global-keymap
		   "XF86AudioMute"
		   '((eric-display-msg "Sound Mute Toggle")
			 (system "amixer set Master toggle")))

;; application keymacros
(define apps-keymap (make-keymap))
(bind-keys global-keymap "Super-j" apps-keymap)
(bind-keys apps-keymap
		   "o" '(jump-or-exec "Opera" "opera" t)
		   "l" '(jump-or-exec "xscreen" "xscreensaver-command -activate" t)
		   "t" '(jump-or-exec ":~" "gnome-terminal" t)
		   "d" '(jump-or-exec "StarDict" "stardict" t)
		   "e" '(jump-or-exec "Emacs" "emacs" t)
		   "k" '(jump-or-exec "Skype" "skype" t)
		   "b" '(jump-or-exec "LibreOffice" "libreoffice" t)
		   "f" '(jump-or-exec "Firefox" "firefox" t)
		   "y" '(jump-or-exec "Synergy" "synergy" t)
		   "v" '(jump-or-exec "TeamViewer" "teamviewer" t)
		   "r" '(jump-or-exec "GNOME Commander" "gnome-commander" t)
		   )

(setq startup-programs
	  '(
		("fbpanel")
		("fcitx")
		("nm-applet")
		("megasync")
		("skypeforlinux")
		("slack")
		("synapse")
		("synergy")
		("teamviewer")
		("xscreensaver")
		))

(mapc (lambda (program)
		(apply start-process (make-process standard-output) program))
	  startup-programs)

(add-hook 'before-exit-hook
		  (lambda ()
			(mapc stop-process (active-processes))))
